{"version":3,"sources":["/Users/ben/code/vertigo-web/src/app/bluetooth/bluetooth-routing.module.ts","/Users/ben/code/vertigo-web/src/app/bluetooth/bluetooth.component.html","/Users/ben/code/vertigo-web/src/app/bluetooth/bluetooth.component.ts","/Users/ben/code/vertigo-web/src/app/bluetooth/bluetooth.module.ts"],"names":[],"mappings":"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","file":"9.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BluetoothComponent } from './bluetooth.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BluetoothComponent,\n    data: {\n      title: 'Bluetooth'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BluetoothRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ben/code/vertigo-web/src/app/bluetooth/bluetooth-routing.module.ts","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"mb-0\\\">\\n                    <h2>Connect to a device</h2>\\n                    \\n          </h5>\\n        </div>\\n        <div class=\\\"card-block\\\">\\n          <div class=\\\"bluetooth\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary  w-100 p-3\\\" style=\\\"border-radius: 15px;\\\" [disabled]=\\\"!supported\\\" (click)=\\\"connect()\\\"><i class=\\\"fa fa-bluetooth fa-3x\\\" style=\\\"margin: 20px;\\\" aria-hidden=\\\"true\\\"></i>Connect to a bluetooth device</button>\\n          </div>\\n          <br>\\n          <div class=\\\"serial w-100 p-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary w-100 p-3\\\" style=\\\"border-radius: 15px;\\\" [disabled]=\\\"true\\\" ><i class=\\\"fa fa-microchip fa-3x\\\" style=\\\"margin: 20px;\\\" aria-hidden=\\\"true\\\"></i>Connect to a serial device</button>\\n          </div>\\n        </div>\\n      </div>\\n      <!--/.card-->\\n\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      <h5 class=\\\"mb-0\\\">\\n        <a>\\n          <h4 class=\\\"card-title mb-0\\\" [innerHTML]=\\\"title\\\">Connected Device</h4>\\n          <div class=\\\"small text-muted\\\" [innerHTML]=\\\"deviceName\\\"></div>\\n        </a>\\n      </h5>\\n    </div>\\n    <div class=\\\"card-block\\\">\\n\\n    </div>\\n  </div>\\n  <!--/.card-->\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ben/code/vertigo-web/src/app/bluetooth/bluetooth.component.html\n// module id = ../../../../../src/app/bluetooth/bluetooth.component.html\n// module chunks = 9","import { Component, OnInit, NgZone, Input} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {ElementRef,Renderer2} from '@angular/core';\nimport { Data,CalculatedData } from '../shared/data';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { BluetoothCore } from '@manekinekko/angular-web-bluetooth';\nimport { Point } from '../shared/point';\nimport { ControlsComponent } from \"app/shared/controls.component\";\n\n@Component({\n  styles: [`\n  .bluetooth button{\n    color:#40a0fc;\n  }\n  .bluetooth button:hover {\n    color: blue;\n  }\n  .bluetooth button:disabled,\n  .bluetooth button[disabled]{\n    color: grey;\n  }\n  .serial button{\n    color: LightGrey;\n  }\n  .serial button:hover {\n    color: black;\n  }\n  .serial button:disabled,\n  .serial button[disabled]{\n    color: grey;\n  }\n  \n`],\n  templateUrl: 'bluetooth.component.html'\n})\n\n\n\nexport class BluetoothComponent implements OnInit {\n\n  private static NO_CONNECTION:string = 'No device connected, click the bluetooth button to connect!';\n\n  public deviceName:string = BluetoothComponent.NO_CONNECTION;\n  public supported:boolean = false;\n  public title:string = \"Connected Device\";\n  private static service:string = 'D7A7FC0AB32E4BDA933F49CBD9CFE2DC';\n  private static imuQuaternionCharacteristic:string = '45AE080722334026B264045A933FA973';\n  private data:CalculatedData;\n  private static step:number = 0.0;\n\n\n  public async connect(){\n    if (this.supported){\n      let options:any = {\n        filters: [\n          {services: [BluetoothComponent.service]}\n        ],\n      };\n      try {\n        console.log('Requesting Bluetooth Device...');\n        console.log('with ' + JSON.stringify(options));\n        const device:BluetoothDevice = await navigator.bluetooth.requestDevice(options);\n        console.log('> Name:             ' + device.name);\n        console.log('> Id:               ' + device.id);\n        console.log('> Connected:        ' + device.gatt.connected);\n        this.deviceName = device.name;\n        this.registerToServices(device,BluetoothComponent.service,BluetoothComponent.imuQuaternionCharacteristic,\n          (event:any)=>{\n            if (!ControlsComponent.Instance.getData()){\n              ControlsComponent.Instance.setData(new CalculatedData());\n            }\n            this.data = ControlsComponent.Instance.getData();\n            this.data.boardReference.newQuaternionData = true;\n            //big endian by default\n            let time:number = BluetoothComponent.step+=0.001;\n            this.data.boardReference.q0.push(new Point(time,event.target.value.getFloat32(0,false)));\n            this.data.boardReference.q1.push(new Point(time,event.target.value.getFloat32(4,false)));\n            this.data.boardReference.q2.push(new Point(time,event.target.value.getFloat32(8,false)));\n            this.data.boardReference.q3.push(new Point(time,event.target.value.getFloat32(12,false)));\n          }\n        );\n      } catch(error)  {\n        console.log('Argh! ' + error);\n        this.deviceName = BluetoothComponent.NO_CONNECTION;\n      }\n    }\n  }\n  \n\n\n  public async registerToServices(device:BluetoothDevice,service:string, characteristic:string,handler:EventListener){\n    device.gatt.connect()\n    .then(server => {\n      // Getting Service\n      return server.getPrimaryService(service);\n    })\n    .then(service => {\n      // Getting Characteristic...\n      return service.getCharacteristic(characteristic);\n    })\n    .then(characteristic => characteristic.startNotifications())\n    .then(characteristic => {\n      characteristic.addEventListener('characteristicvaluechanged',\n      handler);\n    })\n    .catch(error => { console.log(error); });\n    \n  }\n\n  ngOnInit(): void {\n    if (navigator.bluetooth) {\n      this.supported = true;\n      console.log('bluetooth supported');\n    } else {\n      this.title = 'Bluetooth is not supported in your browser! Please use Chrome or Chrome for Android';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ben/code/vertigo-web/src/app/bluetooth/bluetooth.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { BluetoothComponent } from './bluetooth.component';\nimport { BluetoothRoutingModule } from './bluetooth-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BluetoothRoutingModule,\n    ChartsModule,\n    BsDropdownModule\n  ],\n  declarations: [ BluetoothComponent ]\n})\n\nexport class BluetoothModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/ben/code/vertigo-web/src/app/bluetooth/bluetooth.module.ts"],"sourceRoot":"webpack:///"}